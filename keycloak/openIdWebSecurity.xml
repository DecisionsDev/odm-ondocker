<server description="ODM server">
	<variable name="ServerHost" value="http://keycloak-keycloak.apps.kanab.cp.fyre.ibm.com/auth/realms/master"/>

	<!-- Open ID Connect -->
	<!-- Client with inbound propagation set to supported -->
	<!-- loginName and groups are additional claims in the id_token, see Okta documentation -->
	<openidConnectClient authFilterRef="browserAuthFilter" id="odm" scope="openid"
	clientId="odm" clientSecret="***REMOVED***"
	signatureAlgorithm="RS256" inboundPropagation="supported"
        audiences="ALL_AUDIENCES" httpsRequired="false"
	tokenReuse="true"
	userIdentifier="preferred_username" groupIdentifier="groups"
	issuerIdentifier="${ServerHost}"
        jwkEndpointUrl="${ServerHost}/protocol/openid-connect/certs"
        authorizationEndpointUrl="${ServerHost}/protocol/openid-connect/auth"
        tokenEndpointUrl="${ServerHost}/protocol/openid-connect/token"
        validationEndpointUrl="${ServerHost}/protocol/openid-connect/token/introspect"/>
  
	<!-- Client with inbound propagation set to required -->
	<!-- loginName and groups are additional claims in the access_token, see Okta documentation -->
	<openidConnectClient authFilterRef="apiAuthFilter" id="odmapi" scope="openid"
	clientId="odm" clientSecret="***REMOVED***"
	signatureAlgorithm="RS256" inboundPropagation="required"
        audiences="ALL_AUDIENCES" httpsRequired="false"
	tokenReuse="true"
	userIdentifier="preferred_username" groupIdentifier="groups"
	issuerIdentifier="${ServerHost}"
        jwkEndpointUrl="${ServerHost}/protocol/openid-connect/certs"
        authorizationEndpointUrl="${ServerHost}/protocol/openid-connect/auth"
        tokenEndpointUrl="${ServerHost}/protocol/openid-connect/token"
        validationEndpointUrl="${ServerHost}/protocol/openid-connect/token/introspect"/>
</server>
